#!/bin/bash

# --------------------------------------
#
#     Title: build-tcpdump
#    Author: EAK TEAM ELECTRONICS, EMAIL : info@eakteam.com
#
#   Purpose: download & build tcpdump for arm android platform
#
# You have to define your android NDK directory before calling this script
# example:
# $ bash build-tcpdump
#
# --------------------------------------

tcpdump_ver=4.9.2
libpcap_ver=1.9.0
android_api_def=21
toolchain_abi=arm
ndk_dir_def=ndk-r19c #change your ndk path here
bin_dir=armeabi

#-------------------------------------------------------#

tcpdump_dir=tcpdump-${tcpdump_ver}
libpcap_dir=libpcap-${libpcap_ver}


if [[ ${NDK} ]]
then
	ndk_dir=${NDK}
else
	ndk_dir=${ndk_dir_def}
fi

if [[ "$(uname -s)" = 'Linux' ]]
then
	ndk_dir=$(readlink -f ${ndk_dir})
else
	ndk_dir=$(perl -e 'use Cwd "abs_path";print abs_path(shift)' "${ndk_dir}")
fi

if [[ ${ANDROID_API} ]]
then
	android_api=${ANDROID_API}
else
	android_api=${android_api_def}
fi

echo "_______________________"
echo "NDK - ${ndk_dir}"
echo "Android API: ${android_api}"
echo "_______________________"


exit_error()
{
	echo " _______"
	echo "|       |"
	echo "| ERROR |"
	echo "|_______|"
	exit 1
}

{
	if [[ $# -ne 0 ]]
	then
		if [[ -d $1 ]]
		then
			cd "$1" || return
		else
			echo directory "$1" not found
			exit_error
		fi
	else
		mkdir tcpdumpbuild
		cd tcpdumpbuild || return
	fi
}


# Prepare toolchains
{
	echo " ____________________"
	echo "|                    |"
	echo "| TOOLCHAIN          |"
	echo "|____________________|"
	
	toolchain=toolchain/${toolchain_abi}
	if [[ -d toolchain ]]
	then
		echo Toolchain already exist! Nothing to do.
	else
		echo Creating toolchain...
		mkdir -p ${toolchain}
		
		if ! "${ndk_dir}"/build/tools/make_standalone_toolchain.py --arch=${toolchain_abi} --api=${android_api} --install-dir=${toolchain}  --force
		then
			rm -fr ${toolchain}
			exit_error
		fi
	fi

	PATH=$(pwd)/${toolchain}/bin:$PATH
    export PATH

	target_host=arm-linux-androideabi
    export AR=${target_host}-ar
    export AS=${target_host}-clang
    export CC=${target_host}-clang
    export CXX=${target_host}-clang++
    export LD=${target_host}-ld
    export STRIP=${target_host}-strip
	export RANLIB=${target_host}-ranlib
	export STRIP=${target_host}-strip
	export CFLAGS="-static -O2 -fPIE -fPIC -march=armv7-a -mthumb -mfloat-abi=softfp -mfpu=vfpv3-d16 -mfpu=neon -march=armv7-a -Wl,--fix-cortex-a8"
    export LDFLAGS="-pie"
}

# download & untar libpcap + tcpdump
{
	echo " _______________________________"
	echo "|                               |"
	echo "| DOWNLOADING LIBPCAP & TCPDUMP |"
	echo "|_______________________________|"
	
	asc_file=signing-key.asc
	tcpdump_file=${tcpdump_dir}.tar.gz
	libpcap_file=${libpcap_dir}.tar.gz
	public_asc=http://www.tcpdump.org/release/${asc_file}
	tcpdump_link=http://www.tcpdump.org/release/${tcpdump_file}
	libpcap_link=http://www.tcpdump.org/release/${libpcap_file}
	
	if [[ -f ${asc_file} ]]
	then
		echo ${asc_file} already downloaded! Nothing to do.
	else
		echo Download ${asc_file}...
		wget ${public_asc}
		if [[ ! -f ${asc_file} ]]
		then
			exit_error
		fi
	fi

	if ! gpg --import ${asc_file}
	then
		exit_error
	fi

	if [[ -f ${tcpdump_file} ]]
	then
		echo ${tcpdump_file} already downloaded! Nothing to do.
	else
		echo Download ${tcpdump_file}...
		wget ${tcpdump_link}
		wget ${tcpdump_link}.sig
		if [[ ! -f ${tcpdump_file} ]]
		then
			exit_error
		fi
	fi

	if ! gpg --verify ${tcpdump_file}.sig
	then
		exit_error
	fi

	
	if [[ -f ${libpcap_file} ]]
	then
		echo ${libpcap_file} already downloaded! Nothing to do.
	else
		echo Download ${libpcap_file}...
		wget ${libpcap_link}
		wget ${libpcap_link}.sig
		if [[ ! -f ${libpcap_file} ]]
		then
			exit_error
		fi
	fi

	if ! gpg --verify ${libpcap_file}.sig
	then
		exit_error
	fi

	
	if [[ -d ${tcpdump_dir} ]]
	then
		make clean -C ${tcpdump_dir}
		echo ${tcpdump_dir} directory already exist! Clean previous configure.
	else
		echo untar ${tcpdump_file}
		tar -zxf ${tcpdump_file}
	fi
	
	if [[ -d ${libpcap_dir} ]]
	then
		make clean -C ${libpcap_dir}
		echo ${libpcap_dir} directory already exist! Clean previous configure.
	else
		echo untar ${libpcap_file}
		tar -zxf ${libpcap_file}
	fi
}

# build libpcap
{
	cd "${libpcap_dir}" || return

	echo " _____________________"
	echo "|                     |"
	echo "| CONFIGURING LIBPCAP |"
	echo "|_____________________|"

	chmod +x configure

	if ! ./configure --host=armv7a-linux-androideabi --with-pcap=linux
	then
		exit_error
	fi	

	echo " __________________"
	echo "|                  |"
	echo "| BUILDING LIBPCAP |"
	echo "|__________________|"

	chmod +x runlex.sh
	
	if ! make
	then
		exit_error
	fi

    cd ..
}

# build tcpdump
{
	cd ${tcpdump_dir} || return
	
	echo " _____________________"
	echo "|                     |"
	echo "| CONFIGURING TCPDUMP |"
	echo "|_____________________|"
	
	chmod +x configure

	if ! ./configure --host=arm-linux-androideabi --with-pcap=linux
	then
		exit_error
	fi	

	echo " __________________"
	echo "|                  |"
	echo "| BUILDING TCPDUMP |"
	echo "|__________________|"
	
	#setprotoent endprotoen not supported on android
	sed -i".bak" "s/setprotoent/\/\/setprotoent/g" print-isakmp.c
	sed -i".bak" "s/endprotoent/\/\/endprotoent/g" print-isakmp.c

	#NBBY is not defined => FORCE definition
	
	if ! make #CFLAGS=-DNBBY=8 # for tcpdump < 4.2.1 (CFLAGS refefined in Makefile) => just make
	then
		exit_error
	fi
	
	cd ..
}

mkdir -p ${bin_dir}
cp ${tcpdump_dir}/tcpdump ./${bin_dir}
chmod +x ./${bin_dir}/tcpdump

echo " __________________"
echo "|                  |"
echo "| TCPDUMP IS READY |"
echo "|__________________|"
echo "$(pwd)"/${bin_dir}/tcpdump
